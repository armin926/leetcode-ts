
/*
 * 题目名称： 剑指 Offer 63. 股票的最大利润

 * 题目描述：假设把某股票的价格按照时间先后顺序存储在数组中，请问买卖该股票一次可能获得的最大利润是多少？
 *          示例1：
 *          输入: [7,1,5,3,6,4]
 *          输出: 5
 *          解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
 *          注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。
 *          示例 2:
 *          输入: [7,6,4,3,1]
 *          输出: 0
 *          解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。
 * 
 * 解题思路：贪心算法
*/

const maxProfit = (prices: number[]): number => {
  let min = prices[0] // 假设最低价在第一天
  let profit = 0 // 假设利润为 0
  for(let i = 1; i<prices.length; i++) {
    min = Math.min(min, prices[i]) // 如果发现比当前价格更低的 就替换最低价
    profit = Math.max(profit, prices[i] - min) // 如果发现比当前利润更高的 则替换利润
  }
  return profit
}